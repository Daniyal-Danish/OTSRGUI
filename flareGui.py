# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'TestRun1.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt, QTimer
from PyQt5.QtGui import QPainter, QColor, QPen
from PyQt5.QtWidgets import QWidget
import math

class SpeedDial(QWidget):
    def __init__(self, *args, **kwargs):
        super(SpeedDial, self).__init__(*args, **kwargs)
        self.current_velocity = 0
        self.max_velocity = 200

    def paintEvent(self, event):
        painter = QPainter(self)
        rect = self.rect()
        center = rect.center()
        radius = min(rect.width(), rect.height()) // 2

        painter.setRenderHint(QPainter.Antialiasing)
        painter.setBrush(Qt.NoBrush)

        painter.setPen(QPen(QColor(0, 173, 181), 8))
        painter.drawEllipse(center, radius, radius)

        painter.setPen(QPen(QColor(238, 238, 238), 2))
        for i in range(0, 181, 10):
            angle = i - 90
            x1 = int(center.x() + radius * 0.85 * math.cos(math.radians(angle)))
            y1 = int(center.y() + radius * 0.85 * math.sin(math.radians(angle)))
            x2 = int(center.x() + radius * 0.95 * math.cos(math.radians(angle)))
            y2 = int(center.y() + radius * 0.95 * math.sin(math.radians(angle)))
            painter.drawLine(x1, y1, x2, y2)

        needle_angle = (self.current_velocity / self.max_velocity) * 180 - 90
        painter.setPen(QPen(QColor(0, 173, 181), 4))
        x_needle = int(center.x() + radius * 0.8 * math.cos(math.radians(needle_angle)))
        y_needle = int(center.y() + radius * 0.8 * math.sin(math.radians(needle_angle)))
        painter.drawLine(center.x(), center.y(), x_needle, y_needle)

        painter.setPen(QPen(QColor(238, 238, 238), 1))
        painter.setFont(QtGui.QFont("Roboto", 20))
        painter.drawText(rect, Qt.AlignCenter, f"{self.current_velocity} m/s")

    def update_velocity(self, velocity):
        self.current_velocity 
        self.update()


class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(470, 432)
        Form.setMinimumSize(QtCore.QSize(470, 432))
        Form.setMaximumSize(QtCore.QSize(470, 432))
        Form.setStyleSheet("background-color: rgb(34, 40, 49);")

        self.line = QtWidgets.QFrame(Form)
        self.line.setGeometry(QtCore.QRect(130, 20, 211, 41))
        self.line.setStyleSheet("background-color: rgb(0, 0, 0);\n"
"color: rgb(0, 0, 0);\n"
"alternate-background-color: rgb(0, 0, 0);\n"
"selection-color: rgb(0, 0, 0);\n"
"border-color: rgb(0, 0, 0);\n"
"gridline-color: rgb(0, 0, 0);\n"
"selection-background-color: rgb(0, 0, 0);")
        


        self.line.setFrameShadow(QtWidgets.QFrame.Plain)
        self.line.setLineWidth(35)
        self.line.setMidLineWidth(35)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setObjectName("line")

        self.AltitudeOutput = QtWidgets.QLabel(Form)
        self.AltitudeOutput.setGeometry(QtCore.QRect(-10, 380, 151, 16))
        self.AltitudeOutput.setStyleSheet("font: 15pt 'OCR A Extended'; color: #eeeeee; background-color: #393e46;")
        self.AltitudeOutput.setAlignment(QtCore.Qt.AlignCenter)
        self.AltitudeOutput.setObjectName("AltitudeOutput")

        self.Timeoutput = QtWidgets.QLabel(Form)
        self.Timeoutput.setGeometry(QtCore.QRect(290, 370, 121, 20))
        self.Timeoutput.setStyleSheet("font: 15pt \"Roboto\";")
        self.Timeoutput.setAlignment(QtCore.Qt.AlignCenter)
        self.Timeoutput.setObjectName("Timeoutput")

        self.label = QtWidgets.QLabel(Form)
        self.label.setGeometry(QtCore.QRect(40, 350, 91, 20))
        self.label.setObjectName("label")

        self.AltitudeProgressBar = QtWidgets.QProgressBar(Form)
        self.AltitudeProgressBar.setGeometry(QtCore.QRect(20, 370, 451, 23))
        self.AltitudeProgressBar.setStyleSheet("QProgressBar { border: 2px solid grey; border-radius: 5px; text-align: center; }"
                                              "QProgressBar::chunk { background-color: #00adb5; width: 20px; }")
        self.AltitudeProgressBar.setMaximum(100000)
        #self.AltitudeProgressBar.setProperty("value", 320459205 % 100000)
        self.AltitudeProgressBar.setAlignment(QtCore.Qt.AlignCenter)
        #self.AltitudeProgressBar.setObjectName("AltitudeProgressBar")

        self.SpeedDial = SpeedDial(Form)
        self.SpeedDial.setGeometry(QtCore.QRect(160, 100, 150, 150))
        self.SpeedDial.setObjectName("SpeedDial")

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

        self.timer = QTimer()
        self.timer.timeout.connect(self.update_velocity)
        self.timer.start(1000)  # = 1 second

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.AltitudeOutput.setText(_translate("Form", "320459205m"))
        self.Timeoutput.setText(_translate("Form", "4s"))
        #self.label.setText(_translate("Form", "TextLabel"))
    
    def update_velocity(self):
        import random
        new_velocity = random.randint(0, 200)
        self.SpeedDial.update_velocity(new_velocity)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
